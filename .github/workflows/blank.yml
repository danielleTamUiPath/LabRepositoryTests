# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  ORCH_SECRET:  ${{ secrets.PIPEORCHSECRET }} #create in repository
  ORCH_CLIENT_ID: ${{ secrets.PIPEORCHAPPID }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  cleaner:
    runs-on:  windows-latest
    steps:
      - name: Runner workspace path
        run: |
          echo "Cleaning up previous run"
          echo ${{github.workspace}}


  analyze-project:
    needs: cleaner
    runs-on: windows-latest
    steps:
      - name: Check out repository code 
        uses: actions/checkout@v3
      - name: Analyze project for errors  
        shell:  pwsh
        run:  ${{ github.workspace }}\LabTests\UiPathAnalyzeProject.ps1 ${{ github.workspace }}\LabTests\project.json -analyzerTraceLevel "Error" -uipathCliFilePath ${{ github.workspace }}\UiPath.CLI.Windows.23.6.8581.19168\tools\uipcli.exe -stopOnRuleViolation true -treatWarningsAsErrors false -resultPath ${{ github.workspace }}\validate.json -OrchestratorUrl "staging.uipath.com" -orchestratorTenant "DefaultTenant" -orchestratorAccountForApp "tamcontieri" -orchestratorApplicationId "8c0ddcdd-ba47-4077-b00d-04734d5ff393" -orchestratorApplicationSecret "A#9MR@RQUM5bvxPa" -orchestratorApplicationScope "OR.Administration OR.Analytics OR.Assets OR.Audit OR.BackgroundTasks OR.Execution OR.Folders OR.Hypervisor OR.Jobs OR.License OR.Machines OR.ML OR.Monitoring OR.Queues OR.Robots OR.Settings OR.Tasks OR.TestDataQueues OR.TestSetExecutions OR.TestSets OR.Users OR.TestSetSchedules OR.Webhooks" -orchestratorFolder "Shared"
      - name: Upload Analyzer File
        uses: actions/upload-artifact@v3
        with: 
          name: ValidationFile
          path: validate.json
          
